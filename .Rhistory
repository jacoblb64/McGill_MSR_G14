setwd('E://IdeaProjects/McGill_MSR_G14/')
data = read.csv('C://Users/Charles/Desktop/results.csv')
source('analysis scripts/fit_and_performance.r')
runExperiment(data, metrics, none, 1, 300)
data$contains_bug = data$contains_bug == 't'
runExperiment(data, metrics, none, 1, 300)
runExperiment(data, metrics, none, 1, 300)
total = read.csv('data/new/baseline/aucTable1-300.csv')
total = append(total, read.csv('data/new/baseline/aucTable301-600.csv'))
total = append(total, read.csv('data/new/baseline/aucTable601-900.csv.csv'))
total = append(total, read.csv('data/new/baseline/aucTable601-900.csv'))
total = append(total, read.csv('data/new/baseline/aucTable901-1234.csv'))
nrow(total)
summary(total)
length(total)
write.csv(total, '
rl
')
write.csv(total, 'data/new/baseline/aucTable.csv')
total = read.csv('data/new/baseline/aucTable1-300.csv')
total = rbind(total, read.csv('data/new/baseline/aucTable301-600.csv'))
nrow(total)
total = rbind(total, read.csv('data/new/baseline/aucTable601-900.csv'))
total = rbind(total, read.csv('data/new/baseline/aucTable901-1234.csv'))
write.csv(total, 'data/new/baseline/aucTable.csv')
nrow(total)
total = read.csv('data/new/baseline/brierTable1-300.csv')
total = rbind(total, read.csv('data/new/baseline/brierTable301-600.csv'))
total = rbind(total, read.csv('data/new/baseline/brierTable601-900.csv'))
total = rbind(total, read.csv('data/new/baseline/brierTable901-1234.csv'))
write.csv(total, 'data/new/baseline/brierTable.csv')
list = list()
typeof(list)
summary(list)
append(list, "val")
append(list, "val", "hello")
wilcox.test()
names(total)[2]
auc1 = read.csv('data/new/rq1/aucTable.csv')
auc0 = read.csv('data/new/baseline/aucTable.csv')
source('analysis scripts/predictive_power.r')
source('analysis scripts/predictive_power.r')
install.packages('taRifx')
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
auc1[1]
auc1[1,]
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
auc1[1,1:4]
auc1[1,3:6]
as.numeric(.Last.value)
source('analysis scripts/predictive_power.r')
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
auc1[colSums(!is.na(auc1)) > 0]
auc11 = auc1[colSums(!is.na(auc1)) > 0]
length(names(auc11))
auc00 = auc0[colsums(!is.na(auc0)) > 0]
auc00 = auc0[colSums(!is.na(auc0)) > 0]
wilcox.test(auc11[1,3:1234], auc00[1,3:1234])
wilcox.test(auc11[1,3:1052], auc00[1,3:1052])
wilcox.test(as.numeric(auc11[1,3:1052]), as.numeric(auc00[1,3:1052]))
results <- .Last.value
summary(resuls)
summary(results)
wilcox.test(as.numeric(auc1[1,3:1234]), as.numeric(auc0[1,3:1234]), na.action==na.exclude)
wilcox.test(as.numeric(auc1[1,3:1234]), as.numeric(auc0[1,3:1234]), na.action=na.exclude)
wilcox$p.value
wilcox[['p.value']]
results[['p.value']]
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
auc00 <- auc0
auc00$X <- NULL
auc00$name <- NULL
auc11 <- auc1
auc11$name <- NULL
auc11$X <- NULL
wilcox.test(as.numeric(auc0[1,]), as.numeric(auc1[1,]), na.action=na.exclude)
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
length(names(auc11))
for ( i in 1:length(names(auc11))) {
wilcox.test(as.numeric(auc0[i,]), as.numeric(auc1[i,]), na.action=na.exclude)
}
warnings()
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
wilcox.test(as.numeric(auc1[i,]), as.numeric(auc0[i,]), na.action=na.exclude)
i
width <- length(names(performance_with))
source('analysis scripts/predictive_power.r')
results <- process(auc11, auc00)
source('analysis scripts/predictive_power.r')
results <- process(auc11, auc00)
name <- performance_with$name
performance_with <- auc11
performance_wo <- 1uc00
performance_wo <- auc00
name <- performance_with$name
results <- data.frame(name)
results[,'Pwilcox'] <- NA
summary(results)
name
name <- performance_with$names
name
names(auc1)[1:3]
name <- auc1$name
results <- data.frame(name)
summary(results)
results[,'Pwilcox'] <- NA
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
width <- length(names(performance_with))
pb <- txtProgressBar(min = 0, max = width, style = 3)
for (i in 1:width) {
 wilcox <- wilcox.test(as.numeric(performance_with[i,3:width]),
                          as.numeric(performance_wo[i,3:width]),
                          na.action=na.exclude)
results[i, 'Pwilcox'] <- as.numeric(wilcox[['p.value']])
setTxtProgressBar(pb, i)
}
source('analysis scripts/predictive_power.r')
results <- process(auc1, auc0)
for (i in 1:width) {
wilcox <- wilcox.test(as.numeric(performance_with[i,3:width]), as.numeric(performance_wo[i,3:width]), na.action=na.exclude)
results[i, 'Pwilcox'] <- as.numeric(wilcox[['p.value']])
setTxtProgressBar(pb, i)
}
for (i in 1:width) {
wilcox <- wilcox.test(as.numeric(auc1[i,3:width]), as.numeric(auc0[i,3:width]), na.action=na.exclude)
results[i, 'Pwilcox'] <- as.numeric(wilcox[['p.value']])
setTxtProgressBar(pb, i)
}
wilcox <- wilcox.test(as.numeric(auc1[1,3:width]), as.numeric(auc0[1,3:width]), na.action=na.exclude)
wilcox
wilcox.test(as.numeric(auc1[20,3:width]), as.numeric(auc0[1,3:width]), na.action=na.exclude)
wilcox.test(as.numeric(auc1[20,3:width]), as.numeric(auc0[20,3:width]), na.action=na.exclude)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result
result[1]
summary(result)
result <- process(auc1, auc0)
summary(result)
result[1,]
result[2,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[2,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[3,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
auc1[4]
auc1[4,]
wilcox.test(as.numeric(auc1[4,3:width]), as.numeric(auc0[4,3:width]), na.action=na.exclude)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10]
result[1:10,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result[1:10,]
result <- process(auc1, auc0)
result[1:10,]
auc1[rowSums(is.na(auc1)) < 1200,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result[1:10,]
auc1[3,1]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
!is.na(auc1[4,1])
!is.na(auc1[5,1])
!is.na(auc1[1,1])
!is.na(auc1[1,2])
!is.na(auc1[3,2])
auc[3,2]
auc1[3,2]
auc1[3,3]
auc1[4,3]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result[1:10,]
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result[1:10,]
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result[1:10,]
result[1:10,]
result[1:10,]
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
source('analysis scripts/predictive_power.r')
result <- process(auc1, auc0)
result[1:10,]
write.csv(result, 'data/new/wilcox.csv')
isTrue = result$Pwilcox <= (0.05 / 673)
summary(isTrue)
498 / 498 + 366
498 + 366
isTrue = result$Pwilcox <= (0.05 / 864)
498 / (498 + 366)
summary(isTrue)
savehistory()
epv = read.csv('data/new/EPV.csv')
summary(epv)
summary(epv$rq1df < 10)
summary(epv$rq2df < 10)
badnames = epv[ which(epv$rq2df < 10),names]
badnames = epv[ which(epv$rq2df < 10), 'names']
summary(badnames)
write.csv(badnames, 'data/new/EPVprojfails.csv')
goodnames = epv$names - badnames
goodnames = epv[ which(epv$rq2df >= 10), 'names']
length(goodnames)
length(badnames)
write.csv(goodnames, 'data/new/EPVprojgood.csv')
auc1 = read.csv('data/new/rq1/aucTable.csv')
failnames = auc1[ which(is.na(auc1$abs)), 'name']
length(failnames)
auc2 = read.csv('data/new/rq2/aucTable.csv')
failnames2 = auc2[ which(is.na(auc1$abs)), 'name']
length(failnames2)
write.csv(failnames, 'data/new/projfailfit.csv')
failnames[1]
failnames[ which(failnames %in% badnames)]
failnames[ which(!(failnames %in% badnames))]
nenames = failnames[ which(!(failnames %in% badnames))]
length(nenames)
wilcox = read.csv('data/new/rq1/wilcox.csv')
summary(wilcox)
wfnames = wilcox[ which(is.na(wilcox$Pwilcox)), 'name']
length(wfnames)
newfnames = wfnames[ which(!(wfnames %in% badnames))]
length(newfnames)
1234 = 370
1234 - 370
wilcoxsub = wilcox[ which(!(wilcox$name %in% badnames)),] 
summary(wilcoxsub)
summary(wilcoxsub$Pwilcox < (0.05 / nrow(wilcoxsub)))
summary(wilcoxsub$Pwilcox < (0.05 / (nrow(wilcoxsub) - 208)))
297 / (297 + 204)
badnames2 = cbind(badnames, nenames)
badnames2 = rbind(badnames, nenames)
badnames2 = append(badnames, nenames)
summary(badnames2)
summary(nenames)
summary(badnames)
badnames2 = merge(badnames, nenames)
summary(badnames2)
badnames2 = append(as.list(badnames), as.list(nenames))
summary(badnames2)
badnames2 = c(as.list(badnames), as.list(nenames))
summary(badnames2)
badnames2 = c(badnames, nenames)
summary(badnames2)
nrow(badnames2)
length(badnames2)
badnames2[1]
badnames2[2]
badnames[1]
nenames[1]
typeof(badnames)
badnames
as.character(badnames)
as.list(badnames)
badnames2 = c(as.character(badnames), as.character(nenames))
summary(badnames2)
badnames2[1]
badnames2[3]
badnames2[4]
typeof(badnames2)
wilcoxsub2 = wilcox[ which(!(wilcox$name %in% badnames2),]
wilcoxsub2 = wilcox[ which(!(wilcox$name %in% badnames2)),]
summary(wilcoxsub2)
summary(wilcoxsub2 < ( 0.05 / (nrow(wilcoxsub2 - 199)))
)
summary(wilcoxsub2 < ( 0.05 / (nrow(wilcoxsub2) - 199)))
summary(wilcoxsub2$Pwilcox < ( 0.05 / (nrow(wilcoxsub2) - 199)))
287 / (287 + 190)
savehistory()
epvbadnames = read.csv('data/new/EPVprojfails.csv')
failbadnames = read.csv('data/new/projfailfit.csv')
nenames = failbadnames[ which(!(failbadnames %in% epvbadnames))]
length(nenames)
nemnames
nenames
nenames = failbadnames[ which(!(failbadnames$x %in% epvbadnames)),x]
summary(failbadnames)
summary(failbadnames$x)
nenames = failbadnames[ which(!(failbadnames$x %in% epvbadnames)),'x']
nenames
nenames = failbadnames[ which(!(failbadnames$x %in% epvbadnames$x)),'x']
nenames
length(nenames)
write.csv(nenames, 'data/new/33fail.csv')
savehistory()
auc1 = read.csv('data/new/rq1/aucTableNew.csv')
ncol(auc1)
nrow(auc1)
names(auc1)[1]
names(auc1)[2]
names(auc1)[3]
names(auc1)[4]
auc1$X.1 <- NULL
auc1$X <- NULL
ncol(auc1)
badnames = read.csv('data/new/33fail.csv')
badnames = badnames$x
length(badnames)
for (name in badnames) {
auc1['ace']
for (name in badnames) {
auc1[name] <- NULL
}
ncol(auc1)
709 - 683 - 1
33 - 25
auc1$geworkbench.core <- NULL
auc1$H2.Mirror <- NULL
auc1$nci.term.browser <- NULL
auc1$ORCID.Source <- NULL
auc1$origin.server <- NULL
auc1$spring.security <- NULL
ncol(auc1)
709 - 33
nrow( auc1[ which(!(auc1$name %in% badnames)),]) 
auc1 = auc1[ which(!(auc1$name %in% badnames)),]
nrow(auc1)
ncol(auc1)
gsub("-", ".", badnames[11], fixed = T)
for (name in badnames) {
name = gsub("-", ".", name, fixed = T)
}
badnames
for (name in badnames) {
name <<- gsub("-", ".", name, fixed = T)
}
badnames
badnamesdot
badnamesdot = list()
for (name in badnames) {
badnamesdot <- append(badnamesdot, gsub("-", ".", name, fixed = TRUE)
}
for (name in badnames) {
badnamesdot <- append(badnamesdot, gsub("-", ".", name, fixed = TRUE))
}
badnamesdot
for (name in badnames) {
badnamesdot = list()
for (name in badnames) {
badnamesdot <- c(badnamesdot, gsub("-", ".", name, fixed = TRUE))
}
badnamesdot
badnamesdot = list()
badnamesdot <- c(badnamesdot, list(gsub("-", ".", name, fixed = TRUE)))
badnamesdot = list()
for (name in badnames) {
badnamesdot <- c(badnamesdot, list(gsub("-", ".", name, fixed = TRUE)))
}
badnamesdot
apply(badnames, 1, function(x) gsub("-",".",x))
badnames
badnames = read.csv('data/new/33fail.csv')
apply(badnames, 1, function(x) gsub("-",".",x))
apply(badnames, 1, function(row) gsub("-",".",row$x))
apply(badnames, 1, function(row) gsub("-",".",row['x']))
badnames = read.csv('data/new/33fail.csv')['x']
badnames
typeof(badnames)
apply(badnames, 1, function(row) gsub("-",".",row['x']))
brier1 = read.csv('data/new/rq1/brierTableNew.csv')
source('analysis scripts/remove33fail.r')
source('analysis scripts/remove33fail.r')
brier1 = removeProjects(brier1)
nrow(brier1)
ncol(brier1)
savehistory()
