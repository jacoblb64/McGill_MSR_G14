badnames
as.character(badnames)
as.list(badnames)
badnames2 = c(as.character(badnames), as.character(nenames))
summary(badnames2)
badnames2[1]
badnames2[3]
badnames2[4]
typeof(badnames2)
wilcoxsub2 = wilcox[ which(!(wilcox$name %in% badnames2),]
wilcoxsub2 = wilcox[ which(!(wilcox$name %in% badnames2)),]
summary(wilcoxsub2)
summary(wilcoxsub2 < ( 0.05 / (nrow(wilcoxsub2 - 199)))
)
summary(wilcoxsub2 < ( 0.05 / (nrow(wilcoxsub2) - 199)))
summary(wilcoxsub2$Pwilcox < ( 0.05 / (nrow(wilcoxsub2) - 199)))
287 / (287 + 190)
savehistory()
epvbadnames = read.csv('data/new/EPVprojfails.csv')
failbadnames = read.csv('data/new/projfailfit.csv')
nenames = failbadnames[ which(!(failbadnames %in% epvbadnames))]
length(nenames)
nemnames
nenames
nenames = failbadnames[ which(!(failbadnames$x %in% epvbadnames)),x]
summary(failbadnames)
summary(failbadnames$x)
nenames = failbadnames[ which(!(failbadnames$x %in% epvbadnames)),'x']
nenames
nenames = failbadnames[ which(!(failbadnames$x %in% epvbadnames$x)),'x']
nenames
length(nenames)
write.csv(nenames, 'data/new/33fail.csv')
savehistory()
auc1 = read.csv('data/new/rq1/aucTableNew.csv')
ncol(auc1)
nrow(auc1)
names(auc1)[1]
names(auc1)[2]
names(auc1)[3]
names(auc1)[4]
auc1$X.1 <- NULL
auc1$X <- NULL
ncol(auc1)
badnames = read.csv('data/new/33fail.csv')
badnames = badnames$x
length(badnames)
for (name in badnames) {
auc1['ace']
for (name in badnames) {
auc1[name] <- NULL
}
ncol(auc1)
709 - 683 - 1
33 - 25
auc1$geworkbench.core <- NULL
auc1$H2.Mirror <- NULL
auc1$nci.term.browser <- NULL
auc1$ORCID.Source <- NULL
auc1$origin.server <- NULL
auc1$spring.security <- NULL
ncol(auc1)
709 - 33
nrow( auc1[ which(!(auc1$name %in% badnames)),]) 
auc1 = auc1[ which(!(auc1$name %in% badnames)),]
nrow(auc1)
ncol(auc1)
gsub("-", ".", badnames[11], fixed = T)
for (name in badnames) {
name = gsub("-", ".", name, fixed = T)
}
badnames
for (name in badnames) {
name <<- gsub("-", ".", name, fixed = T)
}
badnames
badnamesdot
badnamesdot = list()
for (name in badnames) {
badnamesdot <- append(badnamesdot, gsub("-", ".", name, fixed = TRUE)
}
for (name in badnames) {
badnamesdot <- append(badnamesdot, gsub("-", ".", name, fixed = TRUE))
}
badnamesdot
for (name in badnames) {
badnamesdot = list()
for (name in badnames) {
badnamesdot <- c(badnamesdot, gsub("-", ".", name, fixed = TRUE))
}
badnamesdot
badnamesdot = list()
badnamesdot <- c(badnamesdot, list(gsub("-", ".", name, fixed = TRUE)))
badnamesdot = list()
for (name in badnames) {
badnamesdot <- c(badnamesdot, list(gsub("-", ".", name, fixed = TRUE)))
}
badnamesdot
apply(badnames, 1, function(x) gsub("-",".",x))
badnames
badnames = read.csv('data/new/33fail.csv')
apply(badnames, 1, function(x) gsub("-",".",x))
apply(badnames, 1, function(row) gsub("-",".",row$x))
apply(badnames, 1, function(row) gsub("-",".",row['x']))
badnames = read.csv('data/new/33fail.csv')['x']
badnames
typeof(badnames)
apply(badnames, 1, function(row) gsub("-",".",row['x']))
brier1 = read.csv('data/new/rq1/brierTableNew.csv')
source('analysis scripts/remove33fail.r')
source('analysis scripts/remove33fail.r')
brier1 = removeProjects(brier1)
nrow(brier1)
ncol(brier1)
savehistory()
table = brier1
nrow(table[ which(!(table$name %in% badnames)),])
nrow( table[ which(!(table$name %in% badnames)),]) 
badnames
summary(table$name)
table[ which(table$name == badnames[1]),]
badnames
typeof(badnames)
table$name[3]
table$name[3] %in% badnames
'lila' %in% badnames
"lila" %in% badnames
"yobi" %in% badnames
"yobi" %in% as.character(badnames)
badnames = read.csv('data/new/33fail.csv')
badnames = badnames$x
typeof(badnames)
badnames
"yobi" %in% badnames
as.list(badnames)
badnames = read.csv('data/new/33fail.csv')['x']
typeof(badnames)
"yobi" %in% as.integer(badnames)
badnames = read.csv('data/new/33fail.csv')
badnames = badnames['x']
typeof(badnames);2A
badnames = read.csv('data/new/33fail.csv')
typeof(badnames['x'])
typeof(badnames$x)
typeof(badnames[['x']])
badnames = badnames[['x']]
"yobi" %in% as.integer(badnames)
"yobi" %in% badnames
badnamesdot = apply(badnames, 1, function(row) gsub("-",".",row['x']))
badnamesdot = apply(as.list(badnames), 1, function(row) gsub("-",".",row['x']))
badnamesdot = apply(as.list(badnames), 1, function(row) gsub("-",".",row))
badnamesdot = apply(badnames, 1, function(row) gsub("-",".",row))
badnames = read.csv('data/new/33fail.csv')
badnamesdot = apply(badnames, 1, function(row) gsub("-",".",row['x']))
badnamesdot
table = removeProjects(brier1)
nrow(table)
badnames
badnames$x
source('analysis scripts/remove33fail.r')
table = removeProjects(brier1)
nrow(table)
ncol(table)
names(table)[1]
names(table)[2]
names(table)[3]
source('analysis scripts/remove33fail.r')
table = removeProjects(brier1)
ncol(table)
source('analysis scripts/remove33fail.r')
auc1 = read.csv('data/new/rq1/aucTableNew.csv')
auc1 = removeProjects(auc1)
nrow(auc1)
ncol(auc1)
write.csv(auc1, 'data/new/rq1/aucTableNew.csv')
source('analysis scripts/predictive_power.r')
auc0 = read.csv('data/new/baseline/aucTable.csv')
wilcox.test(as.numeric(performance_with[i,]),
                          as.numeric(performance_wo[i,]),
                          na.action=na.exclude)
performance_with = auc1
performance_wo = auc0
wilcox.test(as.numeric(performance_with[i,]),
                          as.numeric(performance_wo[i,]),
                          na.action=na.exclude)
i = 1
wilcox.test(as.numeric(performance_with[i,]),
                          as.numeric(performance_wo[i,]),
                          na.action=na.exclude)
install.packages('effsize')
cliffs.delta()
library(effsize)
cliffs.delta()
cliff.delta()
cliff.delta(as.numeric(performance_with[i,]), as.numeric(performance_wo[i,]), na.action=na.exclude)
cliffs = .Last.value
summary(cliffs)
cliffs[['estimate']]
cliffs[['magnitude']]
c("hello", "world", "too")
typeof(c("hello", "world", "too"))
newvars = c("hello", "world", "too")
newvars
length(newvars)
for (var in newvars) {
print(var)
{
}}
summary(auc0)
summary(auc1)
source('analysis scripts/predictive_power.r')
process(auc1, auc0)
summary(rowMeans(auc1))
names(auc1)[1]
auc1$name <- NULL
summary(rowMeans(auc1))
summary(colMeans(auc1))
brier1 = read.csv('data/new/rq1/brierTableNew.csv')
brier1 = removeProjects(brier1)
nrow(brier1)
ncol(brier1)
write.csv(brier1, 'data/new/rq1/brierTableNew.csv')
auc2 = read.csv('data/new/rq2/aucTableNew.csv')
auc2 = removeProjects(auc2)
nrow(auc2)
write.csv(auc2, 'data/new/rq2/aucTableNew.csv')
brier2 = read.csv('data/new/rq2/brierTableNew.csv')
brier2 = removeProjects(brier2)
write.csv(brier2, 'data/new/rq2/brierTableNew.csv')
q()
savehistory()
table = read.csv('data/new/rq1/aucTableOld.csv')
epvnames = read.csv('data/new/EPVprojfails.csv')
badnames = read.csv('data/new/33fail.csv')
source('analysis scripts/remove_projects.r')
removeProjects(table, epvnames)
table = removeProjects(table, epvnames)
nrow(table)
table = removeProjects(table, badnames)
nrow(table)
ncol(table)
names(table)[1]
names(table)[2]
names(table)[3]
names(table)[2](0)
names(table)[2][1]
substr(names(table)[2], 1, 1)
!is.na(as.numeric(substr(names(table)[2], 1, 1)))
!is.na(as.numeric(substr(names(table)[10], 1, 1)))
!is.na(as.numeric(substr(names(table)[2], 2, 2)))
names = names(table)
names = unique(table$name)
length(names)
names = epvnames$x
length(names)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
name = badnames[1]
name
name = badnames['x'][1]
name
name = badnames['x']
name
name = epvnames[['x']]
name
name = name[1]
name
!is.na(as.numeric(substr(name, 1, 1)))
badnamescols <- rowToTableNames(epvnames)
typeof(badnamescols)
badnamescols[1]
for (name in badnamescols) {
if (!is.na(as.numeric(substr(name, 1, 1)))) {
name < paste("X", name, sep="")
}
}
badnamescols[1]
for (name in badnamescols) {
# if (!is.na(as.numeric(substr(name, 1, 1)))) {
# name < paste("X", name, sep="")
# }
print(substr(name, 1, 1))
}
!is.na(as.numeric(substr(badnamescols[1], 1, 1)))
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
name = epvnames[1]
name
name = epvnames[['x']][1]
name
paste("X",name,sep="")
bnc = epvnames
for (name in epvnames) {
name <- "hello"
}
epvnames[1]
for (name in bnc[['x']]) {
name <- "hello"
}
bnc
bnc[['x']]
for (name in bnc[['x']]) {
name <<- "hello"
}
bnc
source('analysis scripts/remove_projects.r')
removeProjects(epvnames)
removeProjects(epvnames)
epvnames
source('analysis scripts/remove_projects.r')
epvnames
removeProjects(epvnames)
rowToTableNames(epvnames)
bnc = .Last.value
typeof(bnc)
bnc[1]
bnc[2
]
for (name in bnc) {
name <- "hello"
}
bnc
apply(bnc, 1, "hello")
apply(bnc, 1, function() "hello")
apply(bnc, 1, function(x) "hello")
apply(bnc, 1, function(x) "hello")
lapply(bnc, function(x) "hello")
bnc2 = lapply(bnc, function(x) "hello")
summary(bnc2)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
rowToTableNames(epvnames)
source('analysis scripts/remove_projects.r')
table
talbe = read.csv('data/new/rq1/aucTableOld.csv')
table = read.csv('data/new/rq1/aucTableOld.csv')
table = removeProjects(table, epvnames)
source('analysis scripts/remove_projects.r')
table = removeProjects(table, badnames)
nrow(table)
ncol(table)
write.csv(table, 'data/new/rq1/aucTableOldClean.csv')
table = read.csv('data/new/rq1/brierTableOld.csv')
table = removeProjects(table, epvnames)
table = removeProjects(table, badnames)
write.csv(table, 'data/new/rq1/brierTableOldClean.csv')
table = read.csv('data/new/rq2/aucTableOld.csv')
table = removeProjects(table, epvnames)
table = removeProjects(table, badnames)
write.csv(table, 'data/new/rq2/aucTableOldClean.csv')
table = read.csv('data/new/rq2/brierTableOld.csv')
table = removeProjects(table, epvnames)
table = removeProjects(table, badnames)
write.csv(table, 'data/new/rq2/brierTableOldClean.csv')
table = read.csv('data/new/baseline/aucTable.csv')
table = removeProjects(table, epvnames)
table = removeProjects(table, badnames)
write.csv(table, 'data/new/baseline/aucTableOldClean.csv')
table = read.csv('data/new/baseline/brierTable.csv')
table = removeProjects(table, epvnames)
table = removeProjects(table, badnames)
write.csv(table, 'data/new/baseline/brierTableOldClean.csv')
savehistory()
auc1 = read.csv('data/new/rq1/aucTableOldClean.csv')
auc0 = read.csv('data/new/baseline/aucTableOldClean.csv')
source('analysis scripts/predictive_power.r')
predictive = process(auc1, auc0)
source('analysis scripts/predictive_power.r')
predictive = analyzePredictive(auc1, auc0)
write.csv(predictive, 'data/new/rq1/predictive.csv')
auc2 = read.csc('data/new/rq2/aucTableOldClean.csv')
auc2 = read.csv('data/new/rq2/aucTableOldClean.csv')
predictive = analyzePredictive(auc2, auc0)
write.csv(predictive, 'data/new/rq2/predictiveAuc.csv')
predictive = analyzePredictive(auc2, auc0)
write.csv(predictive, 'data/new/rq2/predictiveAuc.csv')
summary(predicive$cdMag)
summary(predictive$cdMag)
predictive1 = read.csv('data/new/rq1/predictiveAuc.csv')
summary(predictive1$cdMag)
brier0 = read.csv('data/new/baseline/brierTableOldClean.csv')
brier1 = read.csv('data/new/rq1/brierTableOldClean.csv')
brier2 = read.csv('data/new/rq2/brierTableOldClean.csv')
predictive1 = analyzePredictive(brier1, brier0)
predictive2 = analyzePredictive(brier2, brier0)
write.csv(predictive1, 'data/new/rq1/predictiveBrier.csv')
write.csv(predictive2, 'data/new/rq2/predictiveBrier.csv')
summary(predictive1$cdMag)
summary(predictive2$cdMag)
data = read.csv('~/Desktop/new_data_min.csv')
savehistory()
summary(predictive$wilcoxP <= (0.05 / 676))
summary(predictive2$wilcoxP <= (0.05 / 676))
summary(predictive2$wilcoxP <= (0.05 / (139 + 494))
)
wilcox = read.csv('data/new/rq1/wilcox.csv')
summary(wilcox$Pwilcox <= (0.05 / (139 + 494))
)
savehistory()
data = read.csv('~/Desktop/new_data_min.csv')
summary(data)
3648437 + 728379
nrow(data)
760178 + 3616638
728379 36484373616638ow['x']badnamescols <- apply(badnames, 1, function(row) gsub("-",".",row['x']))
badnamescols <- apply(badnames, 1, function(row) {
if (!is.na(as.numeric(substr(row, 1, 1)))) {
return(paste("X", row, sep = ""))
}
auc2 = read.csv('data/new/rq2/predictiveAuc.csv')
summary(auc2$wilcoxP < 0.05 / 676)
165 + 468
summary(auc2$wilcoxP < 0.05 / 633)
167 / 633
savehistory()
table = read.csv('data/new/rq1/aucTableOldClean.csv')
source('analysis scripts/remove_projects.r')
table[1]
table[1,]
table[1,1:5]
table[1:5,1:5]
cleaned = removeDiagonals(table)
cleaned[1:5,1:5]
source('analysis scripts/remove_projects.r')
cleaned = removeDiagonals(table)
cleaned[1:5,1:5]
source('analysis scripts/remove_projects.r')
rowNameToTableName('20-0-0')
source('analysis scripts/remove_projects.r')
cleaned = removeDiagonals(table)
warnings()
source('analysis scripts/remove_projects.r')
cleaned = removeDiagonals(table)
cleaned[1:5,1:7]
cleaned = removeProjects(table)
badnames = read.csv('data/new/33fail.csv')
cleaned = removeProjects(table, badnames)
cleaned[1:5,1:7]
source('analysis scripts/remove_projects.r')
cleaned = removeProjects(table, badnames)
cleaned[1:5,1:7]
cleaned[1:6,1:7]
nrow(cleaned)
ncol(cleaned)
table = read.csv('data/new/rq1/aucTableOldClean.csv')
table = removeProjects(table, badnames)
write.csv(table, 'data/new/rq1/aucTableOldClean.csv')
table = read.csv('data/new/rq1/brierTableOldClean.csv')
table = removeProjects(table, badnames)
write.csv(table, 'data/new/rq1/brierTableOldClean.csv')
table = read.csv('data/new/rq2/brierTableOldClean.csv')
table = removeProjects(table, badnames)
write.csv(table, 'data/new/rq2/brierTableOldClean.csv')
table = read.csv('data/new/rq2/aucTableOldClean.csv')
table = removeProjects(table, badnames)
write.csv(table, 'data/new/rq2/aucTableOldClean.csv')
table = read.csv('data/new/baseline/aucTableOldClean.csv')
table = removeProjects(table, badnames)
write.csv(table, 'data/new/baseline/aucTableOldClean.csv')
table = read.csv('data/new/baseline/brierTableOldClean.csv')
table = removeProjects(table, badnames)
write.csv(table, 'data/new/baseline/brierTableOldClean.csv')
savehistory()
auc0 = read.csv('data/new/baseline/aucTableOldClean.csv')
auc1 = read.csv('data/new/rq1/aucTableOldClean.csv')
auc2 = read.csv('data/new/rq2/aucTableOldClean.csv')
brier0 = read.csv('data/new/baseline/brierTableOldClean.csv')
brier1 = read.csv('data/new/rq1/brierTableOldClean.csv')
brier2 = read.csv('data/new/rq2/brierTableOldClean.csv')
source('analysis scripts/predictive_power.r')
pa1 = analyzePredictive(auc1, auc0)
pa2 = analyzePredictive(auc2, auc0)
pb1 = analyzePredictive(brier1, brier0)
pb2 = analyzePredictive(brier2, brier0)
write.csv(pa1, 'data/new/rq1/predictiveAuc.csv')
write.csv(pa2, 'data/new/rq2/predictiveAuc.csv')
write.csv(pb1, 'data/new/rq1/predictiveBrier.csv')
write.csv(pb2, 'data/new/rq2/predictiveBrier.csv')
summary(pa1)
summary(pa2)
summary(pb1)
summary(pb2)
summary(pa1$wilcoxP < 0.05 / (676 - 7))
summary(pb1$wilcoxP < 0.05 / (676 - 7))
summary(pa1$wilcoxP < 0.05 / (676 - 44))
summary(pa2$wilcoxP < 0.05 / (676 - 44))
summary(pb2$wilcoxP < 0.05 / (676 - 44))
169 / (169 + 463)
21 / (21 + 648)
savehistory()
